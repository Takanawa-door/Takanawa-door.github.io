{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u5bfc\u822a\u9875","text":"<p>\u5728\u5de6\u4fa7\u5217\u8868\u9009\u62e9\u67e5\u770b\u7684\u9875\u9762\u3002</p>"},{"location":"docs/windowsapi/textattr/","title":"\u8bbe\u7f6e\u63a7\u5236\u53f0\u6587\u672c\u5c5e\u6027","text":"<p>\u63a7\u5236\u53f0\u6587\u672c\u5c5e\u6027\u5305\u542b\u6587\u672c\u7684\u524d\u666f\u8272\u3001\u80cc\u666f\u8272\u3001\u4e0b\u5212\u7ebf\u3001\u5220\u9664\u7ebf\u3001\u52a0\u7c97\u3001\u9ad8\u4eae\u7b49\u5c5e\u6027\u3002\u63a7\u5236\u53f0\u6587\u672c\u5c5e\u6027\u4f7f\u5f97\u63a7\u5236\u53f0\u7a0b\u5e8f\u754c\u9762\u71a0\u71a0\u751f\u8f89\u3002\u4ee5\u4e0b\u662f\u4e24\u79cd\u4fee\u6539\u63a7\u5236\u53f0\u6587\u672c\u5c5e\u6027\u7684\u65b9\u6cd5\u3002</p>","tags":["WinAPI"]},{"location":"docs/windowsapi/textattr/#api","title":"API \u65b9\u6cd5","text":"<p>Warning</p> <p>\u6b64\u5904\u4ecb\u7ecd\u7684\u65b9\u6cd5\u5df2\u7ecf\u4e0d\u5728\u5fae\u8f6f\u751f\u6001\u7cfb\u7edf\u8def\u7ebf\u56fe\u4e2d\u3002</p> <p>\u4e0d\u5efa\u8bae\u91c7\u7528\u6b64\u65b9\u6cd5\uff0c\u9664\u975e\u60a8\u7684\u7a0b\u5e8f\u662f Windows \u72ec\u5360\u7684\u3002</p>","tags":["WinAPI"]},{"location":"docs/windowsapi/textattr/#_1","title":"\u8bbe\u7f6e\u5c5e\u6027","text":"<pre><code>WINBASEAPI WINBOOL WINAPI SetConsoleTextAttribute(HANDLE hConsoleOutput,WORD wAttributes);\n</code></pre> <p><code>SetConsoleTextAttribute</code> \u51fd\u6570\u53ef\u4ee5\u5e2e\u52a9\u6211\u4eec\u8bbe\u7f6e\u6587\u672c\u7684\u5c5e\u6027\u3002</p>","tags":["WinAPI"]},{"location":"doubleway/2023-ask-ans/","title":"2023 \u5e74 DoubleWay \u975e\u4e13\u4e1a\u8f6f\u4ef6\u80fd\u529b\u8ba4\u8bc1\u7b2c\u4e00\u8f6e\u95ee\u5377","text":"<p>\u4e0b\u8f7d PDF</p> <p>Warning</p> <p>\u672c\u5957\u8bd5\u5377\u5728\u7ebf\u4e0a\u81ea\u5e26\u89e3\u6790\u3002</p> <p>\u5206\u503c\u8bf4\u660e</p> <ol> <li>\u6bcf\u9898 2 \u5206\uff0c\u5171 10 \u9898 20 \u5206\uff1b</li> </ol>","tags":["DoubleWay"]},{"location":"doubleway/2023-ask-ans/#1","title":"1. \u5355\u9009\u9898","text":"<ol> <li> <p>\u4e0b\u5217\u8bed\u53e5\u4e2d\u53ef\u4ee5\u4fee\u6539 a \u7684\u6210\u5458 x \u4e3a 5 \u7684\u662f\uff08 \uff09\u3002</p> <pre><code>struct {\nint x;\ndouble y;\nchar z;\n} a;\n</code></pre> <p>A. a.x = 5 B. a.y = 5 C. a-&gt;x = 5 D. a.x = 10</p> </li> <li> <p>\u4e0b\u5217\u9009\u9879\u4e2d\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002</p> <p>A. \u5de6\u503c\u7684\u5b9a\u4e49\u662f\u53ef\u4ee5\u51fa\u73b0\u5728\u8d4b\u503c\u8bed\u53e5\u7b49\u4e8e\u53f7\u5de6\u8fb9\u7684\u53d8\u91cf\u3002 B. 5 \u662f\u53f3\u503c\u3002 C. delete \u5173\u952e\u5b57\u53ef\u4ee5\u91ca\u653e\u8fd0\u884c\u65f6\u7533\u8bf7\u7684\u5185\u5b58\u3002 D. NULL \u4e0e nullptr \uff08 C++11 \u8d77\uff09\u90fd\u7528\u4e8e\u6307\u4ee3\u7a7a\u6307\u9488\uff0c\u4f46\u662f\u6709\u672c\u8d28\u4e0a\u7684\u533a\u522b\u3002</p> </li> <li> <p>std::filesystem \uff08\u5934\u6587\u4ef6\uff09\u662f C++\uff08 \uff09\u4e2d\u65b0\u52a0\u5165\u7684\u6807\u51c6\u5e93\u3002 <p>A. 11 B. 14 C. 17 D. 20</p> <li> <p>\u82e5\u6709 std::vector vec \uff0c\u5219\u4e0e for(int i = 0, &amp;c = vec[i]; i &lt; vec.size() ; c = vec[++i])\u7b49\u6548\u7684\u662f\uff08 \uff09\u3002 <p>A. for (int&amp; item : vec) B. for (int item : vec) C. while (i != vec.size()) D. while (i != vec.end())</p> <li> <p>\u4e0b\u5217\u5173\u952e\u5b57\u4e0e#include \u547d\u4ee4\u6709\u76f8\u4f3c\u4f5c\u7528\u7684\u662f\uff08 \uff09\u3002</p> <p>A. extern B. module C. using D. import</p> </li> <li> <p>\u5df2\u77e5\u5982\u4e0b\u4ee3\u7801\uff0c\u5219\u4e0b\u5217\u9009\u9879\u4e2d\u6dfb\u52a0\u5230\u8be5\u6bb5\u4ee3\u7801\u4e4b\u540e\u4f1a\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u7684\u662f\uff08 \uff09\u3002</p> <pre><code>int a = 10, b = 20, c[10];\nint *p1, *p2 = nullptr, *p3 = new int;\ndelete p3;\n</code></pre> <p>A. c[1] = 20; B. p2 = &amp;a; C. delete p3; D. p1 = new int[10];</p> </li> <li> <p>\u5bf9\u4e8e\u8868\u8fbe\u5f0f const int* const (*p)(const int, const int)\u89e3\u8bfb\u6b63\u786e\u662f\uff08 \uff09\u3002</p> <p>A. \u5982\u679c\u6307\u9488 p \u6307\u5411\u5177\u6709\u5b9e\u9645\u610f\u4e49\u7684\u5730\u5740\u5219\u8bed\u53e5 p(10, 10)\u662f\u4e0d\u5408\u6cd5\u7684\u3002 B. p \u6307\u5411\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u662f\u6307\u9488\uff0c\u8fd4\u56de\u7684\u6307\u9488\u5b8c\u5168\u4e0d\u53ef\u4ee5\u88ab\u4fee\u6539\u3002 C. const int* const \u4e2d\u7684\u7b2c\u4e00\u4e2a const \u8868\u793a\u6307\u9488 p \u4e0d\u53ef\u4ee5\u6307\u5411\u5176\u5b83\u5730\u5740\u3002 D. \u7531\u7b2c\u4e8c\u4e2a const \u53ef\u77e5\uff0c p \u662f\u4e00\u4e2a\u4e0d\u53ef\u4ee5\u4fee\u6539\u6307\u5411\u5730\u5740\u7684\u6307\u9488\u3002</p> </li> <li> <p>\u4e00\u4e2a\u540d\u5b57\u7684\u51fd\u6570\u53ef\u4ee5\u51fa\u73b0\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u53c2\u6570\u7684\u8c03\u7528\uff0c\u5219\u79f0\uff08 \uff09\u3002</p> <p>A. \u8fd9\u4e2a\u51fd\u6570\u5177\u6709\u5176\u5b83\u7684\u91cd\u8f7d\u3002 B. \u8fd9\u4e2a\u51fd\u6570\u662f\u591a\u6001\u7684\u3002 C. \u8fd9\u4e2a\u51fd\u6570\u662f\u7ee7\u627f\u81ea\u5176\u5b83\u51fd\u6570\u7684\u3002 D. \u4e0d\u53ef\u80fd\u51fa\u73b0\u8fd9\u79cd\u51fd\u6570\u3002</p> </li> <li> <p>\u4e0b\u5217\u5173\u4e8e\u865a\u51fd\u6570\u8bf4\u6cd5\u6b63\u786e\u7684\u662f\uff08 \uff09\u3002</p> <p>A. \u865a\u51fd\u6570\u4e0d\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u51fa\u73b0\u3002 B. \u865a\u51fd\u6570\u53ef\u4ee5\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u3002 C. \u5982\u679c\u4e00\u4e2a\u7236\u7c7b\u5177\u6709\u865a\u51fd\u6570\uff0c\u5219\u5176\u6d3e\u751f\u7c7b\u5fc5\u987b\u5b9e\u73b0\u8be5\u865a\u51fd\u6570\u3002 D. \u7236\u7c7b\u4e2d\u865a\u51fd\u6570\u5fc5\u987b\u5177\u6709\u5b9e\u73b0\u3002</p> </li> <li> <p>\u4e0b\u5217\u8bf4\u6cd5\u9519\u8bef\u7684\u662f\uff08 \uff09\u3002</p> <p>A. C++11 \u4ee5\u540e auto \u5173\u952e\u5b57\u7528\u4e8e\u81ea\u52a8\u63a8\u5bfc\u7c7b\u578b\u3002 B. C++20 \u8d77\u624d\u80fd\u4f7f\u7528\u8303\u56f4\u5e93\uff08 ranges \uff09\u3002 C. assert(x)\u4e2d\uff0c\u5982\u679c x \u7684\u503c\u4e3a\u5047\u4f1a\u5728\u8fd0\u884c\u671f\u629b\u51fa\u5f02\u5e38\u3002 D. static_assert(x)\u4e2d\uff0c\u5982\u679c x \u7684\u503c\u4e3a\u5047\u4f1a\u5728\u8fd0\u884c\u671f\u629b\u51fa\u5f02\u5e38\u3002</p> </li>","tags":["DoubleWay"]},{"location":"doubleway/2023-ask-ans/#2","title":"2. \u7a0b\u5e8f\u9605\u8bfb\u9898","text":"<ol> <li> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\nusing num = long long;\nconst num f(const num n, const num m) {\nnum s = 0;\nfor (int i = 1; i * i &lt;= n; ++i) {\nif (n % i != 0) continue;\nif (n / i == i) s += i;\nelse s += i + n / i;\ns *= m;\n}\nreturn s;\n}\nint main() {\nnum n, m;\nstd::cin &gt;&gt; n &gt;&gt; m;\nstd::cout &lt;&lt; f(n, m) &lt;&lt; '\\n';\nreturn 0;\n}\n</code></pre> <p>\u4fdd\u8bc1 n\u3001m \u5747\u662f\u5c0f\u4e8e 1000 \u7684\u6b63\u6574\u6570\u3002</p> <p>\u5224\u65ad\u9898\uff1a</p> <ol> <li>\u51fd\u6570 \\(f\\) \u7684\u65f6\u95f4\u590d\u6742\u5ea6\u662f \\(O(\\sqrt{n})\\)\u3002</li> <li>\u5c06\u7b2c 11 \u884c s *= m \u79fb\u52a8\u5230\u7b2c 12 \u884c\u540e\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u4e0d\u4f1a\u6539\u53d8\u3002</li> <li>\\(f(n, m)\\) \u5c06\u4f1a\u8ba1\u7b97 \\(n\\) \u7684\u56e0\u5b50\u7684\u548c\u5e76\u5b58\u50a8\u5230 \\(s\\) \u5e76\u4e14\u8fd4\u56de \\(s \\times \\sqrt{n}\\)\u3002</li> </ol> <p>\u9009\u62e9\u9898\uff1a</p> <ol> <li> <p>\u5982\u679c\u8f93\u5165\u7684 \\(n\\) \u6ee1\u8db3\u4e14 \\(n = p^2\\) \u662f \\(p\\) \u8d28\u6570\uff0c\u5219\u8f93\u51fa\u7ed3\u679c\u4e00\u5b9a\u4e3a\uff08 \uff09\u3002</p> <p>A. \\(n^2 + mn^2 + pn\\) B. \\(m^2 + m^2n + pm\\) C. \\(2mn + 2mn^2 + 2mnp\\) D. \\(m + 2mn + 2mp\\)</p> </li> <li> <p>\u8f93\u5165\u4e3a\u201c7 18\u201d\u65f6\u8f93\u51fa\u4e3a\uff08    \uff09\u3002</p> <p>A. 114 B. 141 C. 144 D. 411</p> </li> </ol> </li> <li> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>    #include &lt;iostream&gt;\nvoid f1(const int&amp; x) {\nstd::cout &lt;&lt; \"f1(\" &lt;&lt; x &lt;&lt; \")\\n\";\n}\nvoid f1(int&amp;&amp; x) {\nstd::cout &lt;&lt; \"f1(\" &lt;&lt; x &lt;&lt; \") with &amp;&amp;\\n\";\n}\nvoid f2(const int&amp; x) {\nstd::cout &lt;&lt; \"f2(\" &lt;&lt; x &lt;&lt; \")\\n\";\nf1(x);\n}\nvoid f2(int&amp;&amp; x) {\nstd::cout &lt;&lt; \"f2(\" &lt;&lt; x &lt;&lt; \") with &amp;&amp;\\n\";\nf1(x);\n}\nint main() {\nf1(10);\nf2(10);\nreturn 0;\n}\n</code></pre> <p>\u5224\u65ad\u9898\uff1a</p> <ol> <li>f1 \u548c f2 \u5177\u6709\u591a\u4e2a\u91cd\u8f7d\u3002</li> <li>\u5c06\u7b2c 10 \u884c\u66f4\u6539\u4e3a f1(std::move(x));\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e0d\u53d8\u3002</li> <li>\u5c06\u7b2c 14 \u884c\u66f4\u6539\u4e3a f1(std::move(x));\u7a0b\u5e8f\u8f93\u51fa\u7ed3\u679c\u4e0d\u53d8\u3002</li> <li>\u5728 f2(int&amp;&amp; x)\u4e2d\u8c03\u7528 f1 \uff0c\u5219\u8c03\u7528\u7684\u662f f1(const int*)\u3002</li> <li>\u5982\u679c\u5728 main \u51fd\u6570\u4e2d\u6dfb\u52a0 int x = 0;\u5219\u8c03\u7528 f2(x)\u8f93\u51fa\u5305\u542b\u201cf1(x)\u201d\u3002</li> </ol> </li> <li> <p>\u8003\u8651\u5982\u4e0b\u4ee3\u7801\uff1a</p> <pre><code>#include &lt;iostream&gt;\nvoid f1(const int&amp; x) {\nstd::cout &lt;&lt; \"f1 cT&amp; with \" &lt;&lt; x &lt;&lt; \"\\n\";\n}\nvoid f1(int&amp;&amp; x) {\nstd::cout &lt;&lt; \"f1 T&amp;&amp; with \" &lt;&lt; x &lt;&lt; \"\\n\";\n}\ntemplate&lt;typename T&gt;\nvoid f2(T&amp;&amp; x){\nf1(x);\nf1(std::forward&lt;T&gt;(x));\n}\nint main() {\nf2(1);\nint x = 3;\nf2(x);\nreturn 0;\n}\n</code></pre> <p>\u9009\u62e9\u9898\uff1a</p> <ol> <li> <p>f2 \u4e2d x \u5c5e\u4e8e\uff08    \uff09\u3002</p> <p>A. \u5de6\u503c\u5f15\u7528 B. \u53f3\u503c\u5f15\u7528 C. \u4e07\u80fd\u5f15\u7528 D. \u6298\u53e0\u5f15\u7528</p> </li> <li> <p>\uff08 6 \u5206\uff09\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u679c\u7b2c\u4e00\u884c\u662f\uff08    \uff09\u3002</p> <p>A. f1 T&amp;&amp; with 1 B. f1 cT&amp; with 3 C. f1 cT&amp; with 1 D. f1 T&amp;&amp; with 3</p> </li> <li> <p>std::forward \u4f5c\u7528\u662f\uff08    \uff09\u3002</p> <p>A. \u5b8c\u7f8e\u8f6c\u53d1 B. \u79fb\u52a8\u8bed\u4e49 C. \u91ca\u653e\u8d44\u6e90</p> </li> </ol> </li> </ol>","tags":["DoubleWay"]},{"location":"doubleway/2023-ask-ans/#3","title":"3. \u5b8c\u5584\u7a0b\u5e8f","text":"<ol> <li> <p>\u95ee\u9898\uff1a\u5df2\u77e5\u4e00\u4e2a \\(m \\times n\\) \u5927\u5c0f\u7684\u8349\u539f\uff0c\u519c\u592b\u7ea6\u7ff0\u77e5\u9053\u6bcf\u5757\u8349\u5730\u4e0b\u7684\u77f3\u6cb9\u8d2e\u85cf\u60c5\u51b5\uff0c\u4ed6\u5e0c\u671b \u77e5\u9053\u8349\u539f\u4e2d\u6709\u591a\u5c11\u6cb9\u7530\uff08\u6b64\u5904\uff0c\u4e0a\u4e0b\u5de6\u53f3\u76f8\u90bb\u7684\u77f3\u6cb9\u5c5e\u4e8e\u540c\u4e00\u4e2a\u6cb9\u7530\uff1b O \u4ee3\u8868\u6b64\u5730\u6709\u77f3\u6cb9\uff0c x \u8868\u793a\u6ca1\u6709\uff09\u3002\u4f8b\u5982\u82e5\u77e9\u9635\uff08 5 \u00d7 5 \uff09\u4e3a\uff1a</p> <pre><code>xxOOx\nxxOxO\nxOOxO\nxxxOO\nxOxxO\n</code></pre> <p>\u5219\u6709\u4e09\u5757\u6cb9\u7530\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;queue&gt;\nconstexpr char NO_OIL = 'x', EXIST_OIL = 'O';\nchar **mp;\nint **vis, cnt, n, m, dir[4][2] {\n{ -1, 0 },\n{ 0, 1 },\n{ 1, 0 },\n{ 0, -1 }\n};\nclass Node {\npublic:\nint row, col;\n};\nchar&amp; get(const Node&amp; p) {\nreturn mp[p.row][p.col];\n}\nint&amp; bor(const Node&amp; p) {\nreturn vis[p.row][p.col];\n}\nconstexpr bool check(const Node&amp; p) {\nreturn p.row &gt;= 0 &amp;&amp; p.row &lt; m &amp;&amp; p.col &gt;= 0 &amp;&amp; p.col &lt; n;\n}\nvoid bfs(const Node&amp; begin, const int cnt) {\nstd::queue&lt;Node&gt; q;\nq.push(begin);\nbor(begin) = cnt;\nwhile (!q.empty()) {\nNode p = q.front();\nq.pop();\nfor (auto&amp; item : dir) {\nNode x = p;\nx.row += item[0];\nx.col += item[1];\nif (!check(x)) continue;\nif (get(x) == NO_OIL) continue;\nif (bor(x)) continue;\nbor(x) = \u30101\u3011;\nq.push(x);\n}\n}\n}\nvoid alloc_array() {\nmp = new \u30102\u3011 [m];\nvis = new \u30103\u3011 [m];\nfor (int i = 0; i &lt; m; ++i) {\nmp[i] = new char[n];\nvis[i] = new int[n];\n}\n}\nvoid free_array() {\nfor (int i = 0; i &lt; m; ++i) {\ndelete[] mp[i];\ndelete[] vis[i];\n}\ndelete[] mp;\ndelete[] vis;\n}\nint main() {\nstd::cin &gt;&gt; m &gt;&gt; n;\nalloc_array();\nfor (int r = 0; r &lt; m; ++r) {\nfor (int c = 0; c &lt; n; ++c) {\nstd::cin &gt;&gt; mp[r][c];\nvis[r][c] = 0;\n}\n}\nfor (int r = 0; r &lt; m; ++r) {\nfor (int c = 0; c &lt; n; ++c) {\nif (\u30104\u3011) {\nbfs({ r, c }, ++cnt);\n}\n}\n}\nstd::cout &lt;&lt; \u30105\u3011 &lt;&lt; '\\n';\nfree_array();\nreturn 0;\n}\n</code></pre> <ol> <li> <p>1 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. cnt B. p.row + p.col C. true D. EXIST_OIL</p> </li> <li> <p>2 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. char; B. char*; C. int; D. int*;</p> </li> <li> <p>3 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. char B. char* C. int D. int*</p> </li> <li> <p>4 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. mp[r][c] == EXIST_OIL B. mp[r][c] == EXIST_OIL &amp;&amp; vis[r][c] C. mp[r][c] == EXIST_OIL &amp;&amp; !vis[r][c] D. mp[r][c] == EXIST_OIL &amp;&amp; vis[r][c] != false</p> </li> <li> <p>5 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. cnt; B. n + m; C. m * n; D. bfs({ m, n }, cnt);</p> </li> </ol> </li> <li> <p>\u9605\u8bfb\u7a0b\u5e8f\u5e76\u5b8c\u5584\u3002</p> <p>\u95ee\u9898\u63cf\u8ff0</p> <p>\u4e16\u754c\u5404\u5730\u7684\u5976\u725b\u5c06\u4f1a\u5230\u8fbe\u5f53\u5730\u7684\u673a\u573a\uff0c\u524d\u6765\u53c2\u4f1a\u5e76\u4e14\u5403\u8349\u3002</p> <p>\u5177\u4f53\u5730\u8bf4\uff0c\u6709 N \u5934\u5976\u725b\u5230\u8fbe\u4e86\u673a\u573a\uff08\\(1 \\leq N \\leq 10^5\\)\uff09\uff0c\u5176\u4e2d\u5976\u725b i \u5728\u65f6\u95f4 \\(t_i\\)\uff08\\(0 \\leq t_i \\leq 10^9\\)\uff09\u5230\u8fbe\u3002Farmer John \u5b89\u6392\u4e86 M \uff08\\(1 \\leq M \\leq 10^5\\)\uff09\u8f86\u5927\u5df4\u6765\u673a\u573a\u63a5\u8fd9\u4e9b\u5976\u725b\u3002\u6bcf\u8f86\u5927\u5df4\u53ef\u4ee5\u4e58\u5750 C \u5934\u5976\u725b\uff08\\(1 \\leq C \\leq N\\)\uff09\u3002</p> <p>Farmer John \u6b63\u5728\u673a\u573a\u7b49\u5f85\u5976\u725b\u4eec\u5230\u6765\uff0c\u5e76\u4e14\u51c6\u5907\u5b89\u6392\u5230\u8fbe\u7684\u5976\u725b\u4eec\u4e58\u5750\u5927\u5df4\u3002\u5f53\u6700\u540e\u4e00\u5934\u4e58\u5750\u67d0\u8f86\u5927\u5df4\u7684\u5976\u725b\u5230\u8fbe\u7684\u65f6\u5019\uff0c\u8fd9\u8f86\u5927\u5df4\u5c31\u53ef\u4ee5\u53d1\u8f66\u4e86\u3002Farmer John \u60f3\u8981\u505a\u4e00\u4e2a\u4f18\u79c0\u7684\u4e3b\u529e\u8005\uff0c\u6240\u4ee5\u5e76\u4e0d\u60f3\u8ba9\u5976\u725b\u4eec\u5728\u673a\u573a\u7b49\u5f85\u8fc7\u957f\u7684\u65f6\u95f4\u3002\u5982\u679c Farmer John \u5408\u7406\u5730\u534f\u8c03\u8fd9\u4e9b\u5927\u5df4\uff0c\u7b49\u5f85\u65f6\u95f4\u6700\u957f\u7684\u5976\u725b\u7b49\u5f85\u7684\u65f6\u95f4\u7684\u6700\u5c0f\u503c\u662f \u591a\u5c11\uff1f\u4e00\u5934\u5976\u725b\u7684\u7b49\u5f85\u65f6\u95f4\u7b49\u4e8e\u5979\u7684\u5230\u8fbe\u65f6\u95f4\u4e0e\u5979\u4e58\u5750\u7684\u5927\u5df4\u7684\u53d1\u8f66\u65f6\u95f4\u4e4b\u5dee\u3002</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nconst int N = 1e5 + 1;\nint n, m, c, t[N];\nbool check(const int x) {\nint cnt = 1, lst = 1;\nfor (int i = 1; i &lt;= n; ++i) {\nif (\u30101\u3011) {\nlst = i;\n++cnt;\ncontinue;\n}\n}\nreturn cnt &lt;= m;\n}\nvoid solve() {\nint l = 0, r = t[n], mid;\nwhile (l &lt; r) {\nmid = (l + r) / 2;\nif ( \u30102\u3011 ) {\n\u30103\u3011;\n} else {\n\u30104\u3011;\n}\n}\nstd::cout &lt;&lt;\u30105\u3011&lt;&lt; '\\n';\n}\nint main() {\nstd::cin &gt;&gt; n &gt;&gt; m &gt;&gt; c;\nfor (int i = 1; i &lt;= n; ++i) {\nstd::cin &gt;&gt; t[i];\n}\nstd::sort(t + 1, t + 1 + n);\nsolve();\nreturn 0;\n}\n</code></pre> <ol> <li> <p>1 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. t[i] - t[lst] &gt;= x || i - lst + 1 &gt; c B. t[i] - t[lst] &gt; x || i - lst + 1 &gt; c C. t[i] - t[lst] &gt;= x || i - lst &gt; c D. t[i] - t[lst] &gt; x || i - lst &gt; c</p> </li> <li> <p>2 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. !check(mid) B. check(l) C. check(mid) D. <code>check(r)</code></p> </li> <li> <p>3 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. l = mid B. r = mid C. l = mid + 1 D. r = mid - 1</p> </li> <li> <p>4 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. l = mid B. r = mid C. l = mid + 1 D. r = mid - 1</p> </li> <li> <p>5 \u5904\u5e94\u8be5\u586b\uff08 \uff09\u3002</p> <p>A. l B. r C. mid D. (l + r) / 2</p> </li> </ol> </li> </ol>","tags":["DoubleWay"]},{"location":"doubleway/2023-ask-ans/#_1","title":"\u53c2\u8003\u7b54\u6848","text":"\u53c2\u8003\u7b54\u6848 <pre><code>1.\n 1- 5 AACAD\n 6-10 CBABD\n\n2.\n 1 a-c TFF\n   a-b BC\n 2 TFTTT\n 3 CAA\n\n3.\n 1 1-5 ABDCA\n 2 1-5 BCBCA\n</code></pre>","tags":["DoubleWay"]},{"location":"doubleway/about/","title":"\u5173\u4e8e DoubleWay \u8bd5\u9898","text":"<p>DoubleWay \u8bd5\u9898\u662f\u5173\u4e8e C++ \u8bed\u8a00\u7684\u4e00\u5957\u8bd5\u9898\uff0c\u5176\u4e2d\u8003\u5bdf\u8bed\u8a00\u7279\u6027\u3001\u57fa\u7840\u7b97\u6cd5\u7b49\u5185\u5bb9\u3002DoubleWay \u8bd5\u9898\u81ea 2023 \u5e74\u5f00\u59cb\uff0c\u4e0d\u65ad\u4ea7\u751f\u3002\u672c\u9875\u9762\u6c47\u603b\u4e86 DoubleWay \u8bd5\u9898\u3002</p> <p>DoubleWay \u8bd5\u9898\u5206\u4e3a\u5355\u9009\u9898\u3001\u7a0b\u5e8f\u9605\u8bfb\u9898\u4e0e\u7a0b\u5e8f\u5b8c\u5584\u9898\u3002</p>","tags":["DoubleWay"]},{"location":"doubleway/about/#doubleway_1","title":"\u6211\u53ef\u4ee5\u5236\u4f5c\u4e00\u4efd DoubleWay \u8bd5\u9898\u5417\uff1f","text":"<p>\u662f\u3002DoubleWay \u8bd5\u9898\u9762\u5411\u793e\u533a\uff0c\u4efb\u4f55\u4eba\u90fd\u53ef\u4ee5\u7f16\u5199\u4e00\u5957 DoubleWay \u8bd5\u9898\uff0c\u4f60\u53ef\u4ee5\u5411\u6307\u5b9a\u90ae\u7bb1\u6295\u7a3f\uff0c\u4f18\u79c0\u7684\u8bd5\u9898\u5c06\u4f1a\u5f97\u5230\u91c7\u7eb3\u5e76\u5728\u4e0b\u4e00\u5957\u8bd5\u9898\u4e2d\u51fa\u73b0\u3002</p>","tags":["DoubleWay"]},{"location":"doubleway/about/#doubleway_2","title":"DoubleWay \u8bd5\u9898\u7684\u4f5c\u7528","text":"<p>DoubleWay \u8bd5\u9898\u8003\u5bdf\u4e86\u8bed\u8a00\u7279\u6027\u3001\u57fa\u7840\u7b97\u6cd5\uff0c\u5728\u95f2\u6687\u4e4b\u4f59\u53ef\u4ee5\u8003\u8651\u5237\u4e00\u4e0b\u3002</p>","tags":["DoubleWay"]},{"location":"doubleway/about/#doubleway_3","title":"DoubleWay \u8bd5\u9898\u7684\u96be\u5ea6\u5982\u4f55\uff1f","text":"<p>DoubleWay \u8bd5\u9898\u7684\u96be\u5ea6\u9002\u4e2d\uff0c\u9002\u5408\u5927\u90e8\u5206\u4eba\u7fa4\u4f5c\u7b54\u3002</p>","tags":["DoubleWay"]},{"location":"doubleway/all-ask-ans/","title":"\u6240\u6709 DoubleWay \u95ee\u5377","text":"<p>\u4f60\u53ef\u4ee5\u5728\u8fd9\u91cc\u627e\u5230\u6240\u6709\u7684 DoubleWay \u95ee\u5377\u3002</p>","tags":["DoubleWay"]},{"location":"doubleway/all-ask-ans/#2023-doubleway","title":"2023 \u5e74 DoubleWay \u975e\u4e13\u4e1a\u8f6f\u4ef6\u80fd\u529b\u8ba4\u8bc1\u7b2c\u4e00\u8f6e\u95ee\u5377","text":"<p>\u4e0b\u8f7d PDF \u7ebf\u4e0a\u6d4f\u89c8\u4e0e\u89e3\u6790</p>","tags":["DoubleWay"]},{"location":"doubleway/all-ask-ans/#2023-doubleway_1","title":"2023 \u5e74 DoubleWay \u975e\u4e13\u4e1a\u8f6f\u4ef6\u80fd\u529b\u8ba4\u8bc1\u7b2c\u4e8c\u8f6e\u95ee\u5377","text":"<p>\u4e0b\u8f7d\u95ee\u5377\uff08 PDF \uff09 \u4e0b\u8f7d\u7b54\u6848\uff08 PDF \uff09</p>","tags":["DoubleWay"]},{"location":"softwares/chatgqt/","title":"ChatGQT","text":"<p>\u6700\u65b0\u7248\u672c\uff1a Version 0.2 \uff1b \u8bed\u8a00\uff1a \u7b80\u4f53\u4e2d\u6587\u3002</p> <p>ChatGQT \u662f\u65b0\u4e00\u4ee3\u590d\u8bfb\u673a\uff0c\u667a\u969c\u822c\u5730\u5339\u914d\u6570\u636e\u5e93\u5e76\u4e14\u7ed9\u51fa\u56de\u7b54\u3002</p> <ul> <li> \u81ea\u4e3b\u601d\u8003\u3002</li> <li> \u5b8c\u5584\u6570\u636e\u5e93\u3002</li> </ul>","tags":["ChatGQT"]},{"location":"softwares/chatgqt/#chatgqt-v02","title":"ChatGQT V0.2 \u53d1\u5e03","text":"<p>ChatGQT V0.2 \u57fa\u4e8e \u52a8\u6001\u89c4\u5212\u3002\u7075\u611f\u6765\u81ea\u67d0\u8003\u8bd5\u6700\u540e\u4e00\u9053\u9898\u7684\u5b8c\u5584\u7a0b\u5e8f\u7684\u7f16\u8f91\u8ddd\u79bb\u3002</p>","tags":["ChatGQT"]},{"location":"softwares/chatgqt/#_1","title":"\u63d0\u5347","text":"<ol> <li>\u66f4\u52a0 \u667a\u6167\u3002\u52a8\u6001\u89c4\u5212\u7b97\u6cd5\u76f8\u6bd4\u4e8e ChatGQT V0.1 \u4f7f\u7528\u7684 Low \u7684\u5b57\u7b26\u5339\u914d\uff08\u57fa\u4e8e\u6876\uff09\uff0c\u66f4\u52a0\u667a\u6167\u3002\u52a8\u6001\u89c4\u5212\u53ef\u4ee5\u66f4\u597d\u7b97\u51fa\u9884\u8bbe\u95ee\u9898\u4e0e\u8f93\u5165\u7684\u76f8\u4f3c\u5ea6\uff01</li> <li>\u66f4\u597d\u7684 \u53ef\u79fb\u690d\u6027\u3002\u5bf9\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\uff0c\u79fb\u690d\u65b9\u4fbf\u800c\u7b80\u5355\u3002</li> <li>\u652f\u6301 \u81ea\u5b9a\u4e49\u8bed\u6599\u3002\u53ea\u9700\u8981\u8c03\u7528 ChatGQT \u65f6\u52a0\u5165\u8bed\u6599\u6587\u4ef6\uff08\u6587\u672c\u6587\u4ef6\uff09\u5c31\u53ef\u4ee5\u8ba9 ChatGQT \u65b9\u4fbf\u95ee\u7b54\uff01\u4e00\u4efd ChatGQT \uff0c\u767e\u4e07\u8bed\u6599\u767e\u4e07\u95ee\u7b54\u3002</li> <li>\u652f\u6301 \u6c49\u5b57\u3002ChatGQT V0.1 \u4e0d\u652f\u6301\u6c49\u5b57\uff0c\u968f\u7740\u7b97\u6cd5\u7684\u6539\u8fdb\uff0c ChatGQT \u5df2\u7ecf\u53ef\u4ee5\u8bc6\u522b\u6c49\u5b57\u4e86\uff01</li> </ol>","tags":["ChatGQT"]},{"location":"softwares/chatgqt/#_2","title":"\u9a6c\u4e0a\u4f53\u9a8c","text":"<p>Github\u3002\u4e0b\u8f7d ChatGQT Version 2.0 \uff1ahttps://wwwe.lanzouq.com/b01fjfkmd\uff08\u5bc6\u7801:chatgqt \uff09\u3002</p>","tags":["ChatGQT"]},{"location":"softwares/chatgqt/#_3","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<ol> <li> <p>\u65b0\u5efa\u6587\u672c\u6587\u4ef6 <code>yuliao.txt</code>\u3002</p> </li> <li> <p>\u5411\u6587\u4ef6\u4e2d\u5199\u5165\u5982\u4e0b\u683c\u5f0f\u7684\u5185\u5bb9\uff1a</p> <pre><code>\"Question\"\n\n\u95ee\u9898\u3002\n\n\"Answer\"\n\n\u89e3\u7b54\u3002\n\n...\n\n\"End\"\n</code></pre> </li> <li> <p>\u8fd0\u884c <code>chatgqt.exe 6000 yuliao.txt</code>\u3002\u5176\u4e2d 6000 \u6307\u53ea\u6709\u95ee\u9898\u4e0e\u8f93\u5165\u76f8\u4f3c\u5ea6\u8fbe\u5230 60% \u624d\u4f1a\u8f93\u51fa\u7b54\u6848\u3002</p> <p>\u4f60\u4e5f\u53ef\u4ee5\u4e0b\u8f7d\u9884\u8bbe\u8bed\u6599\u5e93\u8fdb\u884c\u95ee\u7b54\u3002</p> </li> <li> <p>\u8c03\u6559\u4f60\u7684 ChatGQT \uff01</p> </li> </ol>","tags":["ChatGQT"]}]}